# Plan for B2B Service Delivery System (v0.16) - ERPNext-First Approach

This document outlines an ERPNext-first implementation plan for a system allowing admins to create projects for clients, send invoices, and deliver the final service via email. This approach ensures all data lives in ERPNext from the start.

### **Core Concept: Self-Healing ERPNext DocTypes**

Instead of a manual migration, the application's server actions will be built to be "self-healing." When an action needs a custom DocType (like adding fields to the standard "Project" DocType), it will first check if it exists. If not, it will programmatically create it and its required fields before retrying the original request.

---

### **Implementation Steps & Progress**

**Phase 1: Admin Project & Invoice Management**
- [✅] **Programmatically Add Custom Fields to "Project" DocType**
  - A new helper function `ensureProjectCustomFieldsExist()` will add our required fields to the standard ERPNext "Project" DocType.
  - **Fields**:
    - `service_item`: Link to Item (the service purchased)
    - `status`: Select (Draft, Awaiting Payment, In Progress, Awaiting Delivery, Completed, Cancelled)
    - `sales_invoice`: Link to Sales Invoice
    - `service_management_url`: Data (e.g., URL to the admin-side web builder)
    - `final_service_url`: Data (e.g., URL to the client's live website)
    - `credential_setup_url`: Data (Secure, one-time setup URL)
    - `delivery_date`: Datetime

- [✅] **Admin UI: Project List Page (`/admin/projects`)**
- [✅] **Admin UI: Project Creation Form (`/admin/projects/new`)**
  - [✅] Ability to select existing customers.
  - [✅] Ability to create a new customer if they don't exist in ERPNext via a dialog.

- [⌛] **Admin UI: Project Detail Page (`/admin/projects/[id]`)**
  - Displays all data for a single "Project" document.
  - Shows an "Invoice" section.
  - **Action**: A "Create & Send Invoice" button. This action will:
    - Create a new `Sales Invoice` in ERPNext linked to the project's customer and service.
    - Set the `Sales Invoice` status to `Unpaid`.
    - Update the "Project" document with the link to the new `Sales Invoice`.
    - Change the "Project" status to `Awaiting Payment`.
    - Trigger an email to the client with the invoice details and a payment link.

**Phase 2: Payment & Project Activation**
- [ ] **Webhook for Payment Success**
  - The Xendit webhook needs to be updated.
  - When a `Sales Invoice` is paid, the webhook should:
    - Update the `Sales Invoice` status to `Paid`.
    - Find the corresponding "Project" document.
    - Update the "Project" status to `In Progress`.
    - Send a confirmation email to the client: "Thank you for your payment. We have started working on your project."
    - Create a new `User` in ERPNext using the Customer's email if one doesn't already exist.

- [ ] **Admin UI: Project Detail Page Updates**
  - When a project is `In Progress`, the admin can input the `service_management_url` (where they are building the website).

**Phase 3: Service Delivery**
- [ ] **Admin UI: Project Delivery Action**
  - When a project is `In Progress` or `Awaiting Delivery`, a "Deliver Project" section becomes active on the project detail page.
  - **Fields**: Admin enters the `final_service_url` (the live website).
  - **Action**: A "Send Delivery Email" button. This action will:
    - Generate a secure, one-time `credential_setup_url`.
    - Update the "Project" document with the `final_service_url`, `credential_setup_url`, `delivery_date`, and set status to `Completed`.
    - Trigger a delivery email to the client.

- [ ] **Client Delivery Email**
  - The email will contain:
    - A link to their `final_service_url`.
    - A button/link to the `credential_setup_url` to access their Flarebee dashboard.

**Phase 4: Client-Side Dashboard**
- [ ] **Client UI: My Services / My Projects Page (`/dashboard/my-projects`)**
  - A new page for logged-in clients.
  - It fetches all "Project" documents linked to the current user.
  - Displays a list of their projects (e.g., "Website for PT Jaya Abadi").
  - For `Completed` projects, it shows a link to the `final_service_url` and a link to manage their service within the dashboard.
